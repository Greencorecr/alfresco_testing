name: Build CI

on:
  push:
  pull_request:
  release:
    types: [published]
  check_suite:
    type: [rerequested]

jobs:
  alfresco-monilitic-testing:
    runs-on: ubuntu-20.04
    steps:
    - name: Setup JDK 11
      id: setup-java-11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        token: ${{ secrets.PAT }}
        submodules: recursive
    - name: Install tools for selenium testing
      run: |
        sudo pip3 install selenium
        wget https://github.com/mozilla/geckodriver/releases/download/v0.29.0/geckodriver-v0.29.0-linux64.tar.gz
        tar xzvf geckodriver-v0.29.0-linux64.tar.gz
        sudo mv geckodriver /usr/local/bin/geckodriver
    - name: Pylint checks
      run: |
        sudo pip3 install pylint
        pylint test/*.py
    - name: Github CI uninstall
      run: |
        sudo apt-get purge -qqy apache* nginx* adoptopenjdk-8-hotspot
        sudo ln -s /usr/lib/jvm/adoptopenjdk-11-hotspot-amd64 /usr/lib/jvm/adoptopenjdk-8-hotspot-amd64
        sudo update-java-alternatives -s adoptopenjdk-11-hotspot-amd64
    - name: Adding sudo perms
      run: |
        cat << EOF | sudo tee /etc/sudoers.d/ci
        $USER ALL=(ALL) NOPASSWD: ALL
        Defaults:$USER !requiretty
        postgres ALL=(ALL) NOPASSWD: ALL
        Defaults:postgres !requiretty
        EOF
    - name: Alfresco Monolitic Install
      run: |
        ./alfresco-ubuntu-install/alfinstall.sh
        sudo rm /etc/nginx/sites-available/default
        sudo wget -O /etc/nginx/conf.d/alfresco.conf https://github.com/fede2cr/alfresco-ubuntu-install/raw/master/nginx/default
        sudo rm /etc/nginx/nginx.conf
        sudo wget -O /etc/nginx/nginx.conf https://github.com/fede2cr/alfresco-ubuntu-install/raw/master/nginx/nginx.conf
        sudo mkdir -p /etc/letsencrypt/live/alfresco-demo.greencore.co.cr/
        ( cd /etc/letsencrypt/live/alfresco-demo.greencore.co.cr/ && sudo openssl req -x509 -nodes -days 365 -subj "/C=CA/ST=QC/O=Company, Inc./CN=newdomain.com" -addext "subjectAltName=DNS:newdomain.com" -newkey rsa:2048 -out fullchain.pem -keyout privkey.pem )
        sudo systemctl restart nginx
        systemctl status nginx
    - name: Install Pause
      run: sleep 4m
    - name: Basic web tests
      run: |
        sudo apt-get -qy install nmap
        nmap -sV --script ssl-enum-ciphers -p 443 localhost
        java -version
        python3 test/test_basic.py
        find .
        #python3 test/test_audit.py
    - name: Basic Selenium Tests
      run: python test/test_selenium_basic.py
    - name: Installs addons
      run: |
        cd alfresco_addons
        sudo -u alfresco ./monolitic_install.sh
        find /opt/alfresco/modules -ls
    - name: Tests backup
      run: |
        sudo -u postgres pg_dump -Fc -U postgres alfresco -f /tmp/backup.sql.gz
        sudo cp -a /opt/alfresco /opt/alfresco-restore
        sudo /opt/alfresco/alfresco-service.sh servicestop
        sudo -u alfresco /opt/alfresco/solr6/solr/bin/solr stop
        sudo -u postgres pg_restore -v -c -d alfresco /tmp/backup.sql.gz
        sudo mv /opt/alfresco /opt/alfresco-antes-restaurado-${date +%F-%s}
        sudo mv /opt/alfresco-restore /opt/alfresco
        sudo wget https://github.com/Greencorecr/alf_utils/raw/main/fixperms/fixperms.sh
        sudo ./fixperms.sh
        sudo /opt/alfresco/alfresco-service.sh servicestart
        sudo -u alfresco /opt/alfresco/solr6/solr/bin/solr start
    - name: Restore pause
      run: sleep 4m
    - name: Basic Selenium Tests after restore
      run: python test/test_selenium_basic.py
#    - name: Installs local LDAP Server
#      run: sudo scripts/ldap-install.sh
#    - name: Testing local LDAP Server
#      run: ldapsearch -LLL -H ldap://localhost:389 -D cn=ldapuser,ou=ldapgroup,dc=greencore,dc=priv -w dogood -x -bdc=greencore,dc=priv cn=ldapuser
#    - name: Integrate LDAP into Alfresco
#      run: |
#        sudo /opt/alfresco/alfresco-service.sh servicestop
#        sudo rm /opt/alfresco/tomcat/logs/*
#        sudo sed -i 's/#LDAP# //g' /opt/alfresco/tomcat/shared/classes/alfresco-global.properties
#        sudo /opt/alfresco/alfresco-service.sh servicestart
#        sleep 1m
#    - name: Testing Alfresco LDAP Auth
#      run: |
#        ps faxww
#        cat /opt/alfresco/tomcat/logs/*
#        python3 test/test_basic.py
#        #python3 test/test_ldap.py


#  alfresco-docker-testing:
#    runs-on: ubuntu-20.04
#    steps:
#    - uses: actions/checkout@v2
#      with:
#        fetch-depth: 0
#        submodules: recursive
#    - name: Alfresco Docker Install
#      run: |
#        ( cd acs-community-deployment/docker-compose && sudo ../fixperms.sh )
#        ( cd acs-community-deployment/docker-compose/volumes/data/certs/conf && sudo openssl req -x509 -nodes -days 365 -subj "/C=CA/ST=QC/O=Company, Inc./CN=newdomain.com" -addext "subjectAltName=DNS:newdomain.com" -newkey rsa:2048 -out fullchain.pem -keyout privkey.pem )
#        ( cd acs-community-deployment/docker-compose && docker-compose up -d)
#    - name: Install Pause
#      run: sleep 4m
#    - name: Basic web tests
#      run: |
#        sudo apt-get -qy install nmap
#        nmap -sV --script ssl-enum-ciphers -p 443 localhost
#        python3 test/test_basic.py
#        python3 test/test_audit.py
#        #python3 test/test_ldap.py
